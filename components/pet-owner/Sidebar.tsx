import React, { useState, useEffect, useRef } from "react";
import { useRouter } from "next/router";
const Sidebar: React.FC = () => {
  const router = useRouter();
  const { id } = router.query;
  const [activeTab, setActiveTab] = useState<string | null>(null);

  useEffect(() => {
    // Set the active tab based on the current route
    const currentPath = router.asPath;
    const activeButton = petOwnersTabs.find(
      (button) => button.path === currentPath
    );
    if (activeButton) {
      setActiveTab(activeButton.path);
    }
  }, [router.asPath]);

  const petOwnersTabs = [
    {
      label: "Profile",
      path: `/petowners/${id}`,
      icon: (
        <svg
          className="w-[24px] h-[24px] mr-4 transition duration-300"
          width="100"
          height="100"
          viewBox="0 0 24 24"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M15.7085 13.2101C16.6889 12.4388 17.4045 11.381 17.7558 10.1841C18.107 8.98709 18.0765 7.71039 17.6683 6.53159C17.2602 5.35279 16.4948 4.33052 15.4786 3.60698C14.4624 2.88344 13.246 2.49463 11.9985 2.49463C10.7511 2.49463 9.53465 2.88344 8.51846 3.60698C7.50228 4.33052 6.73688 5.35279 6.32874 6.53159C5.92061 7.71039 5.89004 8.98709 6.24129 10.1841C6.59254 11.381 7.30814 12.4388 8.28853 13.2101C6.60861 13.8832 5.14282 14.9995 4.04742 16.44C2.95203 17.8806 2.26809 19.5914 2.06853 21.3901C2.05409 21.5214 2.06565 21.6543 2.10256 21.7812C2.13947 21.908 2.201 22.0264 2.28364 22.1294C2.45055 22.3376 2.69332 22.471 2.95853 22.5001C3.22375 22.5293 3.48969 22.4519 3.69786 22.285C3.90602 22.1181 4.03936 21.8753 4.06853 21.6101C4.28812 19.6553 5.22022 17.8499 6.68675 16.5389C8.15328 15.2279 10.0514 14.5032 12.0185 14.5032C13.9856 14.5032 15.8838 15.2279 17.3503 16.5389C18.8168 17.8499 19.7489 19.6553 19.9685 21.6101C19.9957 21.8558 20.113 22.0828 20.2976 22.2471C20.4823 22.4115 20.7213 22.5016 20.9685 22.5001H21.0785C21.3407 22.47 21.5803 22.3374 21.7451 22.1314C21.9099 21.9253 21.9866 21.6625 21.9585 21.4001C21.758 19.5963 21.0704 17.8811 19.9694 16.4383C18.8684 14.9955 17.3954 13.8796 15.7085 13.2101ZM11.9985 12.5001C11.2074 12.5001 10.434 12.2655 9.77625 11.826C9.11845 11.3865 8.60576 10.7618 8.30301 10.0309C8.00026 9.29995 7.92105 8.49569 8.07539 7.71976C8.22973 6.94384 8.61069 6.23111 9.1701 5.6717C9.72951 5.11229 10.4422 4.73132 11.2182 4.57698C11.9941 4.42264 12.7984 4.50186 13.5293 4.80461C14.2602 5.10736 14.8849 5.62005 15.3244 6.27784C15.7639 6.93564 15.9985 7.709 15.9985 8.50012C15.9985 9.56099 15.5771 10.5784 14.827 11.3286C14.0768 12.0787 13.0594 12.5001 11.9985 12.5001Z" />
        </svg>
      ),
    },
    {
      label: "Your Pet",
      path: `/petowners/${id}/yourpet`,
      icon: (
        <svg
          className="w-[24px] h-[24px] mr-4 transition duration-300"
          width="100"
          height="100"
          viewBox="0 0 24 24"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M14.2481 10.878C13.3157 9.38905 11.7276 8.5 9.99998 8.5C8.27249 8.5 6.68429 9.38905 5.75201 10.878L3.50519 14.4657C3.1324 15.0611 2.9604 15.7486 3.00767 16.454C3.05494 17.1596 3.31721 17.8166 3.76604 18.3543C4.21518 18.8919 4.80867 19.2592 5.4823 19.4168C6.15594 19.5743 6.84649 19.5071 7.47918 19.2225L7.52044 19.2037C9.1126 18.5012 10.9324 18.5075 12.5206 19.2225C12.9302 19.4068 13.3642 19.5 13.8021 19.5C14.0402 19.5 14.2797 19.4723 14.517 19.417C15.1907 19.2595 15.7841 18.8922 16.2334 18.3546C16.6824 17.8171 16.9449 17.1599 16.9923 16.4544C17.0397 15.7486 16.8677 15.0611 16.4949 14.4656L14.2481 10.878ZM15.3103 17.5465C14.7388 18.2303 13.8143 18.4465 13.0096 18.0844C12.0531 17.6538 11.0265 17.4386 9.9995 17.4386C8.97348 17.4386 7.94698 17.6536 6.99114 18.0837L6.96395 18.096C6.16542 18.4417 5.25449 18.2227 4.6893 17.5465C4.11843 16.8625 4.05345 15.8941 4.52773 15.1366L6.77471 11.5489C7.48266 10.4184 8.68828 9.74344 9.99998 9.74344C11.3117 9.74344 12.5175 10.4184 13.2256 11.5489L15.4722 15.1365C15.9467 15.8943 15.8815 16.8628 15.3103 17.5465Z" />
          <path d="M3.49763 11.3405C4.12624 11.0765 4.60379 10.5227 4.84241 9.7809C5.06929 9.07506 5.05071 8.27818 4.78978 7.53689C4.52871 6.7961 4.05383 6.19137 3.45273 5.83389C2.82101 5.45853 2.12713 5.39741 1.49957 5.6619C0.237006 6.19267 -0.342386 7.89859 0.208163 9.46553C0.647949 10.7127 1.67367 11.5 2.71069 11.5C2.97548 11.5 3.24102 11.4486 3.49763 11.3405ZM1.27417 9.01686C0.949762 8.09351 1.23478 7.11131 1.90992 6.82747C2.03183 6.7761 2.16073 6.75058 2.29231 6.75058C2.4954 6.75058 2.70519 6.81122 2.90709 6.93135C3.27016 7.14707 3.56023 7.52161 3.72377 7.98573C3.88717 8.45017 3.90174 8.94046 3.76466 9.36653C3.63902 9.75701 3.39861 10.0441 3.08788 10.1746C2.41363 10.4588 1.59963 9.9394 1.27417 9.01686Z" />
          <path d="M7.99984 7.5C9.65411 7.5 11 5.93009 11 4.0004C11 2.07023 9.65411 0.5 7.99984 0.5C6.34573 0.5 5 2.07023 5 4.0004C5 5.93009 6.34573 7.5 7.99984 7.5ZM7.99984 1.72578C8.99387 1.72578 9.80277 2.74622 9.80277 4.0004C9.80277 5.2541 8.99387 6.27422 7.99984 6.27422C7.00582 6.27422 6.19723 5.2541 6.19723 4.0004C6.19723 2.74622 7.00582 1.72578 7.99984 1.72578Z" />
          <path d="M13.9387 8.37912C14.2117 8.46092 14.4904 8.5 14.7677 8.5C16.062 8.5 17.3233 7.64965 17.8046 6.34281C18.0818 5.59054 18.0635 4.79512 17.7533 4.10322C17.4286 3.37902 16.827 2.85327 16.059 2.62268C15.291 2.3924 14.46 2.48838 13.7196 2.89311C13.0123 3.27988 12.4703 3.90704 12.1936 4.65931C11.6094 6.24623 12.3922 7.91494 13.9387 8.37912ZM13.4125 5.02495C13.5932 4.53375 13.9386 4.12902 14.3851 3.88486C14.7982 3.65895 15.2489 3.60146 15.6539 3.72294C16.0588 3.84457 16.3815 4.134 16.5627 4.53813C16.7584 4.97485 16.7668 5.48581 16.5857 5.97701C16.2248 6.95729 15.2191 7.5413 14.344 7.27887C13.4695 7.0163 13.0515 6.00523 13.4125 5.02495Z" />
          <path d="M20.1082 8.98679C19.0511 8.08343 17.4697 8.47448 16.5833 9.85959C15.6978 11.2454 15.8362 13.1084 16.8917 14.0124C17.2767 14.3423 17.7315 14.5 18.197 14.5C19.0084 14.5 19.8525 14.0209 20.4166 13.1399C21.3022 11.7542 21.1639 9.89116 20.1082 8.98679ZM19.525 12.3764C19.0016 13.1937 18.1166 13.4648 17.5519 12.9809C16.9876 12.4977 16.9532 11.4396 17.4752 10.6228C17.8222 10.0806 18.329 9.77891 18.7961 9.77891C19.0324 9.77891 19.2585 9.85608 19.4485 10.0186C20.0123 10.5024 20.0466 11.5601 19.525 12.3764Z" />
        </svg>
      ),
    },
    {
      label: " Booking History",
      path: `/petowners/${id}/booking`,
      icon: (
        <svg
          className="w-[24px] h-[24px] mr-4 transition duration-300"
          width="100"
          height="100"
          viewBox="0 0 20 12"
          fill="currentColor"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M1.71023 10.79C1.61513 10.699 1.50298 10.6276 1.38023 10.58C1.13677 10.48 0.863694 10.48 0.620232 10.58C0.497481 10.6276 0.385336 10.699 0.290233 10.79C0.199192 10.8851 0.127827 10.9972 0.0802325 11.12C0.00365307 11.3021 -0.0172696 11.5028 0.0201045 11.6968C0.0574787 11.8908 0.151475 12.0694 0.290233 12.21C0.387433 12.2983 0.499048 12.3694 0.620232 12.42C0.739933 12.4729 0.869362 12.5002 1.00023 12.5002C1.1311 12.5002 1.26053 12.4729 1.38023 12.42C1.50142 12.3694 1.61303 12.2983 1.71023 12.21C1.84899 12.0694 1.94299 11.8908 1.98036 11.6968C2.01773 11.5028 1.99681 11.3021 1.92023 11.12C1.87264 10.9972 1.80127 10.8851 1.71023 10.79ZM5.00023 2.5H19.0002C19.2654 2.5 19.5198 2.39464 19.7073 2.20711C19.8949 2.01957 20.0002 1.76522 20.0002 1.5C20.0002 1.23478 19.8949 0.98043 19.7073 0.792893C19.5198 0.605357 19.2654 0.5 19.0002 0.5H5.00023C4.73502 0.5 4.48066 0.605357 4.29313 0.792893C4.10559 0.98043 4.00023 1.23478 4.00023 1.5C4.00023 1.76522 4.10559 2.01957 4.29313 2.20711C4.48066 2.39464 4.73502 2.5 5.00023 2.5ZM1.71023 5.79C1.56961 5.65124 1.39104 5.55725 1.19705 5.51987C1.00306 5.4825 0.802343 5.50342 0.620232 5.58C0.499048 5.63064 0.387433 5.70167 0.290233 5.79C0.199192 5.8851 0.127827 5.99725 0.0802325 6.12C0.0273273 6.2397 0 6.36913 0 6.5C0 6.63087 0.0273273 6.7603 0.0802325 6.88C0.130874 7.00118 0.201902 7.1128 0.290233 7.21C0.387433 7.29833 0.499048 7.36936 0.620232 7.42C0.739933 7.47291 0.869362 7.50023 1.00023 7.50023C1.1311 7.50023 1.26053 7.47291 1.38023 7.42C1.50142 7.36936 1.61303 7.29833 1.71023 7.21C1.79856 7.1128 1.86959 7.00118 1.92023 6.88C1.97314 6.7603 2.00047 6.63087 2.00047 6.5C2.00047 6.36913 1.97314 6.2397 1.92023 6.12C1.87264 5.99725 1.80127 5.8851 1.71023 5.79ZM19.0002 5.5H5.00023C4.73502 5.5 4.48066 5.60536 4.29313 5.79289C4.10559 5.98043 4.00023 6.23478 4.00023 6.5C4.00023 6.76522 4.10559 7.01957 4.29313 7.20711C4.48066 7.39464 4.73502 7.5 5.00023 7.5H19.0002C19.2654 7.5 19.5198 7.39464 19.7073 7.20711C19.8949 7.01957 20.0002 6.76522 20.0002 6.5C20.0002 6.23478 19.8949 5.98043 19.7073 5.79289C19.5198 5.60536 19.2654 5.5 19.0002 5.5ZM1.71023 0.79C1.61513 0.698959 1.50298 0.627594 1.38023 0.58C1.19812 0.50342 0.997409 0.482498 0.803419 0.519872C0.609429 0.557246 0.430856 0.651242 0.290233 0.79C0.201902 0.887201 0.130874 0.998815 0.0802325 1.12C0.0273273 1.2397 0 1.36913 0 1.5C0 1.63087 0.0273273 1.7603 0.0802325 1.88C0.130874 2.00119 0.201902 2.1128 0.290233 2.21C0.387433 2.29833 0.499048 2.36936 0.620232 2.42C0.802343 2.49658 1.00306 2.5175 1.19705 2.48013C1.39104 2.44275 1.56961 2.34876 1.71023 2.21C1.79856 2.1128 1.86959 2.00119 1.92023 1.88C1.97314 1.7603 2.00047 1.63087 2.00047 1.5C2.00047 1.36913 1.97314 1.2397 1.92023 1.12C1.86959 0.998815 1.79856 0.887201 1.71023 0.79ZM19.0002 10.5H5.00023C4.73502 10.5 4.48066 10.6054 4.29313 10.7929C4.10559 10.9804 4.00023 11.2348 4.00023 11.5C4.00023 11.7652 4.10559 12.0196 4.29313 12.2071C4.48066 12.3946 4.73502 12.5 5.00023 12.5H19.0002C19.2654 12.5 19.5198 12.3946 19.7073 12.2071C19.8949 12.0196 20.0002 11.7652 20.0002 11.5C20.0002 11.2348 19.8949 10.9804 19.7073 10.7929C19.5198 10.6054 19.2654 10.5 19.0002 10.5Z" />
        </svg>
      ),
    },
  ];

  const handleTabClick = (path: string) => {
    setActiveTab(path);
    router.push(path);
  };

  return (
    <div>
      {/* mobile */}
      <div className="md:hidden">
        <ul className="w-max flex whitespace-nowrap flex-row shadow-md bg-white md:hidden">
          {petOwnersTabs.map((tab, index) => (
            <li
              key={index}
              aria-label={`Go to ${tab.label.toLowerCase()}`}
              onClick={() => handleTabClick(tab.path)}
              className={`w-full flex flex-row items-center justify-center py-3 px-6 group transition duration-300 cursor-pointer ${
                activeTab === tab.path ? "bg-orange-100" : ""
              }`}
            >
              {React.cloneElement(tab.icon, {
                className: `w-[24px] h-[24px] mr-4 ${
                  activeTab === tab.path ? "text-orange-500" : "text-gray-300"
                } transition duration-300`,
              })}
              <span
                className={`text-lg leading-relaxed font-bold ${
                  activeTab === tab.path ? "text-orange-500" : "text-gray-500"
                } transition duration-300`}
              >
                {tab.label}
              </span>
            </li>
          ))}
        </ul>
      </div>

      {/* Desktop */}
      <div className="w-[292px] h-[289px] ml-20 my-10 bg-white shadow-md rounded-2xl flex-col hidden md:block">
        <ul>
          <span className="text-xl flex font-bold text-black py-5 px-6">
            Account
          </span>
          {petOwnersTabs.map((tab, index) => (
            <li
              key={index}
              aria-label={`Go to ${tab.label.toLowerCase()}`}
              onClick={() => handleTabClick(tab.path)}
              className={`w-full h-[67px] flex flex-row py-5 px-6 group transition duration-300 cursor-pointer ${
                activeTab === tab.path ? "bg-orange-100" : ""
              }`}
            >
              {React.cloneElement(tab.icon, {
                className: `w-[24px] h-[24px] mr-4 ${
                  activeTab === tab.path
                    ? "text-orange-500"
                    : "text-gray-300 group-hover:text-orange-500"
                } transition duration-300`,
              })}
              <span
                className={`text-lg leading-relaxed font-bold ${
                  activeTab === tab.path
                    ? "text-orange-500"
                    : "text-gray-500 group-hover:text-orange-500"
                } transition duration-300`}
              >
                {tab.label}
              </span>
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default Sidebar;
